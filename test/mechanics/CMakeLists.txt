# TODO: these test have been commented at some point in time, we should try
# to resurrect some of them:
# Python:
#   NonlocalDamagePlasticity
#   ConstraintsLagrange1D
# C++:
#   ParallelAssembly
#   Brick8NcycleJump
#   CycleJumpNonlocal
#   DogBoneDirectNewmark
#   NonlocalDamagePlasticityModel
#   StructureEvaluate
add_subdirectory(constitutive)

#test files for mechanics module
if(ENABLE_PYTHON_TESTS)
    foreach(test
        Brick8N
        ConstitutiveLaws
        CreateNodesAndGroupOperations
        GlobalDofs
        Sections
        Tetrahedron10N
        DeleteElemNode
        ElementUniaxialTest
        Quad2DPatchTest
        HeatConduction
        )

        add_test(p::mechanics::${test} ${PYTHON_EXECUTABLE}
            ${CMAKE_CURRENT_SOURCE_DIR}/${test}.py
            ${CMAKE_SYSTEM_NAME} 
	    ${CMAKE_SYSTEM_PROCESSOR} 
	    ${CMAKE_CURRENT_SOURCE_DIR} 
	    ${CMAKE_CURRENT_BINARY_DIR})
        set_property(TEST p::mechanics::${test} PROPERTY ENVIRONMENT "PYTHONPATH=${CMAKE_BINARY_DIR}/src")
    endforeach()
endif()


if(ENABLE_C++_TESTS)

    # copy meshes
    foreach(mesh
        2D
        PlateWithHole
        InterfaceElements
        ConstraintsNodeToElementMatrixMesh2d
        ConstraintsNodeToElementFiberMesh2d
        ConstraintsNodeToElementMatrixMesh3d
        ConstraintsNodeToElementFiberMesh3d
        TwoElements
        )
        configure_file(${mesh}.msh ${CMAKE_CURRENT_BINARY_DIR})
    endforeach()

    # generate tests
    foreach(test
        GradientDamage
        NewmarkPlane2D4N
        RungeKutta
        ImplEx
        EngineeringInvariants
        SurfaceLoad
        CoefficientChecks
        ElementUniaxialTruss1D
        ElementUniaxialTriangle2D
        ElementUniaxialQuad2D
        ElementUniaxialBrick3D
        ElementUniaxialTetrahedron3D
        ThermoMechanics2D
        LobattoIntegration
        IPData
        IGA
        InterpolationTypes
        TrussIn2D
        TrussIn3D
        InterfaceElements
        BlockMatrices
        ConstraintsNodeToElement
        IntegrationPointVoronoiCells
        ConstitutiveLawMoistureTransport
        MultipleConstitutiveLaws
        Shrinkage
        SpringDamperCombination
        )

        add_executable(${test} ${test}.cpp)
        target_link_libraries(${test} NuToMechanics NuToMath NuToBase ${Boost_LIBRARIES} ${LAPACK_LIBRARIES} ${ANN_LIBRARIES})
        if(ENABLE_VISUALIZE)
            target_link_libraries(${test} NuToVisualize)
        endif()
        if(MUMPS_FOUND)
            target_link_libraries(${test} ${MUMPS_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
        endif()
        add_test(c::mechanics::${test} ${CMAKE_CURRENT_BUILD_DIR}/${test})
    endforeach()

    if(NOT DEFINED ENV{TRAVIS})
        add_executable(MisesPlasticity MisesPlasticity.cpp)
        target_link_libraries(MisesPlasticity NuToMechanics NuToMath NuToBase ${Boost_LIBRARIES})
        if(ENABLE_VISUALIZE)
          target_link_libraries(MisesPlasticity NuToVisualize)
        endif()
        if(MUMPS_FOUND)
            target_link_libraries(MisesPlasticity ${MUMPS_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
        endif()
        add_test(c::mechanics::MisesPlasticity ${CMAKE_CURRENT_BUILD_DIR}/MisesPlasticity)
    endif()
endif()


if(ENABLE_UNIT_TESTS)
    if(DEFINED ENV{JENKINS_HOME})
        message("Generate perfomance reports.")
    endif()
    # TESTS WITH NuToMechancis
    foreach(test ContinuumElement PhaseField RestartFiles)# LocalDamageModel)
        add_executable(${test} ${test}.cpp)
        target_link_libraries(${test} NuToMechanics NuToMath NuToBase)
        if(ENABLE_VISUALIZE)
            target_link_libraries(${test} NuToVisualize)
        endif()
        if(DEFINED ENV{JENKINS_HOME})
            add_test(c::unit::${test} sh -c "${CMAKE_CURRENT_BINARY_DIR}/${test} -f JUNIT > TEST-${test}.xml")
        else()
            add_test(c::unit::${test} ${CMAKE_CURRENT_BINARY_DIR}/${test})
        endif()
    endforeach()

endif()
